/*
 * Stationsdatenbereitstellung
 * An API providing master data for german railway stations by DB Station&Service AG.
 *
 * OpenAPI spec version: 2.2.01
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.github.martintaraz.dbdatapublisherbot.models.stations;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.github.martintaraz.dbdatapublisherbot.models.stations.SZentrale;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * SZentraleQuery
 */
@javax.annotation.processing.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-12-07T20:50:44.823+01:00")
public class SZentraleQuery {
  @SerializedName("offset")
  private Long offset = null;

  @SerializedName("limit")
  private Long limit = null;

  @SerializedName("total")
  private Long total = null;

  @SerializedName("result")
  private List<SZentrale> result = null;

  public SZentraleQuery offset(Long offset) {
    this.offset = offset;
    return this;
  }

   /**
   * offset of the first result object with respect to the total number of  hits produced by the query
   * @return offset
  **/
  @ApiModelProperty(value = "offset of the first result object with respect to the total number of  hits produced by the query")
  public Long getOffset() {
    return offset;
  }

  public void setOffset(Long offset) {
    this.offset = offset;
  }

  public SZentraleQuery limit(Long limit) {
    this.limit = limit;
    return this;
  }

   /**
   * maximum number of result objects to be returned
   * @return limit
  **/
  @ApiModelProperty(value = "maximum number of result objects to be returned")
  public Long getLimit() {
    return limit;
  }

  public void setLimit(Long limit) {
    this.limit = limit;
  }

  public SZentraleQuery total(Long total) {
    this.total = total;
    return this;
  }

   /**
   * total number of hits produced by that query
   * @return total
  **/
  @ApiModelProperty(value = "total number of hits produced by that query")
  public Long getTotal() {
    return total;
  }

  public void setTotal(Long total) {
    this.total = total;
  }

  public SZentraleQuery result(List<SZentrale> result) {
    this.result = result;
    return this;
  }

  public SZentraleQuery addResultItem(SZentrale resultItem) {
    if (this.result == null) {
      this.result = new ArrayList<SZentrale>();
    }
    this.result.add(resultItem);
    return this;
  }

   /**
   * result objects produced by that query
   * @return result
  **/
  @ApiModelProperty(value = "result objects produced by that query")
  public List<SZentrale> getResult() {
    return result;
  }

  public void setResult(List<SZentrale> result) {
    this.result = result;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SZentraleQuery szentraleQuery = (SZentraleQuery) o;
    return Objects.equals(this.offset, szentraleQuery.offset) &&
        Objects.equals(this.limit, szentraleQuery.limit) &&
        Objects.equals(this.total, szentraleQuery.total) &&
        Objects.equals(this.result, szentraleQuery.result);
  }

  @Override
  public int hashCode() {
    return Objects.hash(offset, limit, total, result);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SZentraleQuery {\n");
    
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

